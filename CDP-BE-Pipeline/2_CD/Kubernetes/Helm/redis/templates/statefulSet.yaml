apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Values.redis.host }}"
spec:
  serviceName: "{{ .Values.redis.host }}"
  namespace: "{{ .Values.namespace }}"
  replicas: "{{ .Values.redis.cluster.replicas }}"
  selector:
    matchLabels:
      app: "{{ .Values.redis.host }}"
  template:
    metadata:
      labels:
        app: "{{ .Values.redis.cluster.host }}"
    spec:
      serviceAccountName: "{{ .Values.sa }}"
      initContainers:
      - name: config
        image: "{{ .Values.redis.cluster.image}}:{{.Values.redis.cluster.tag }}"
        command: [ "sh", "-c" ]
        args:
          - |
            cp /tmp/redis/redis.conf /etc/redis/redis.conf
            
            echo "finding master..."
            MASTER_FDQN=`hostname  -f | sed -e 's/redis-[0-9]\./redis-0./'`
            if [ "$(redis-cli -h sentinel -p 5000 ping)" != "PONG" ]; then
              echo "master not found, defaulting to redis-0"

              if [ "$(hostname)" == "redis-0" ]; then
                echo "this is redis-0, not updating config..."
              else
                echo "updating redis.conf..."
                echo "slaveof $MASTER_FDQN 6379" >> /etc/redis/redis.conf
              fi
            else
              echo "sentinel found, finding master"
              MASTER="$(redis-cli -h sentinel -p 5000 sentinel get-master-addr-by-name mymaster | grep -E '(^redis-\d{1,})|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})')"
              echo "master found : $MASTER, updating redis.conf"
              echo "slaveof $MASTER 6379" >> /etc/redis/redis.conf
            fi
        volumeMounts:
        - name: "{{ .Values.redis.cluster.config }}"
          mountPath: /etc/redis/
        - name: config
          mountPath: /tmp/redis/
      imagePullSecrets:
      - name: "{{ .Values.imgPullSec }}"
      containers:
        serviceAccountName: "{{ .Values.sa }}"
      - name: "{{ .Values.redis.host }}"
        image: "{{ .Values.redis.cluster.image}}":"{{.Values.redis.cluster.tag }}"
        command: ["redis-server"]
        args: ["/etc/redis/redis.conf"]
        ports:
        - containerPort: 6379
          name: "{{ .Values.redis.host }}"
        volumeMounts:
        - name: data
          mountPath: /data
        - name: "{{ .Values.redis.cluster.config }}"
          mountPath: /etc/redis/
      imagePullSecrets:
      - name: "{{ .Values.imgPullSec }}"    
      volumes:
      - name: "{{ .Values.redis.cluster.config }}"
        emptyDir: {}
      - name: config
        configMap:
          name: "{{ .Values.redis.cluster.config }}"
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "{{ .Values.redis.cluster.storage.mode }}" ]
      storageClassName: "{{ .Values.redis.cluster.storage.className }}"
      resources:
        requests:
          storage: 500Mi